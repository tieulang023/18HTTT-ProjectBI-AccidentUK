use  master 
go
if DB_ID ('STAGE') IS NOT NULL
    DROP DATABASE STAGE
GO
CREATE DATABASE STAGE
GO
USE STAGE
GO

CREATE TABLE ACCIDENTS
(
    ACCIDENT_INDEX CHAR(13),
    LOCAL_AUTHORITY_DISTRICT INT,
    LOCAL_AUTHORITY_HIGHWAY CHAR(12),
    DATE_ACC DATETIME,
	ACCIDENT_SEVERITY INT,
	TIME_ACC INT,
	URBAN_OR_RURAL int,
	ROAD_TYPE INT,
	BUILD_UP_ROAD CHAR(30),
	LOCATION_EASTING CHAR(6),
	LOCATION_NORTHING CHAR(6),
	LONGITUDE CHAR(10),
	LATITUDE CHAR(10),
	LSOA CHAR(9),
	NUMBER_OF_CASUALTIES INT,
	CREATED_DATE DATETIME,
	UPDATE_DATE DATETIME

    --CONSTRAINT PK_ACCIDENTS
    --PRIMARY KEY (ACCIDENT_INDEX)
)
CREATE TABLE VEHICLES
(
    ACCIDENT_INDEX CHAR(13),
	VEHICLE_REFERENCE INT,
    VEHICLE_TYPE INT,
	JOUNEY_PURPOSE INT,
	CREATED_DATE DATETIME,
	UPDATE_DATE DATETIME

    --CONSTRAINT PK_VEHICLES
    --PRIMARY KEY (ACCIDENT_INDEX)
)
CREATE TABLE CASUALTIES
(
    ACCIDENT_INDEX CHAR(13),
	VEHICLE_REFERENCE INT,
	CASUALTY_REFERENCE INT,
	CASUAL_SEVERITY INT,
	CASUALTY_GENDER INT,
	CASUAL_TYPE INT,
	AGE_BAND INT,
	AGE_GROUP INT,
	PEDESTRIAN_LOCATION INT,
	PEDESTRIAN_MOVEMENT INT,
	PEDESTRIAN_ROAD_MAINTENANCE_WORKER INT,
	CASUALTY_CLASS INT,
	CREATED_DATE DATETIME,
	UPDATE_DATE DATETIME

    --CONSTRAINT PK_CASUALTIES
    --PRIMARY KEY (ACCIDENT_INDEX)
)
CREATE TABLE POSTCODE
(
    POSTCODE CHAR(10),
    EASTING CHAR(10),
	NORTHING CHAR(10),
	LONGITUDE CHAR(10),
	LATITUDE CHAR(10),
	CITY CHAR(50),
	COUNTY CHAR (30),
	COUNTRY_NAME CHAR(30),
	COUNTRY_CODE CHAR(10),
	REGION_CODE CHAR(9),
	ISO_3166_2 CHAR(50),
	CREATED_DATE DATETIME,
	UPDATE_DATE DATETIME

    --CONSTRAINT PK_POSTCODE
    --PRIMARY KEY (POSTCODE)
)
CREATE TABLE LSOA_INFO
(
    POSTCODE_7 CHAR(10),
	POSTCODE_8 CHAR(10),
	POSTCODE_S CHAR(10),
	LSOA CHAR(50),
	LADNM CHAR(50),
	CREATED_DATE DATETIME,
	UPDATE_DATE DATETIME
    
)


/*ALTER TABLE LSOA_INFO
DROP CONSTRAINT PK_LSOA_INFO
-- Tạo khóa ngoại

ALTER TABLE dbo.ACCIDENTS 
ADD CONSTRAINT FK_ACCIDENTS_LSOA 
FOREIGN KEY(LSOA) 
REFERENCES dbo.LSOA_INFO(LSOA)


ALTER TABLE dbo.CASUALTIES 
ADD CONSTRAINT FK_CASUALTIES_ACCIDENTS
FOREIGN KEY(ACCIDENT_INDEX) 
REFERENCES dbo.ACCIDENTS(ACCIDENT_INDEX)

ALTER TABLE dbo.VEHICLES 
ADD CONSTRAINT FK_VEHICLES_ACCIDENTS
FOREIGN KEY(ACCIDENT_INDEX) 
REFERENCES dbo.ACCIDENTS(ACCIDENT_INDEX)

ALTER TABLE dbo.LSOA_INFO 
ADD CONSTRAINT FK_LSOA_POSTCODE
FOREIGN KEY(POSTCODE) 
REFERENCES dbo.POSTCODE(POSTCODE)
*/


/*
GO
CREATE TRIGGER ACCIDENTS_CREATE_DATE
ON ACCIDENTS
AFTER INSERT
AS
BEGIN
	UPDATE ACCIDENTS SET CREATED_DATE=GETDATE() WHERE ACCIDENT_INDEX=(SELECT ACCIDENT_INDEX FROM inserted)
END

GO
CREATE TRIGGER ACCIDENTS_UPDATE_DATE
ON ACCIDENTS
AFTER UPDATE
AS
BEGIN
	UPDATE ACCIDENTS SET UPDATE_DATE=GETDATE()WHERE ACCIDENT_INDEX=(SELECT ACCIDENT_INDEX FROM inserted)
END

GO
CREATE TRIGGER VEHICLE_CREATE_DATE
ON VEHICLES
AFTER INSERT
AS
BEGIN
	UPDATE VEHICLES SET CREATED_DATE=GETDATE() WHERE ACCIDENT_INDEX=(SELECT ACCIDENT_INDEX FROM inserted)
END

GO
CREATE TRIGGER VEHICLE_UPDATE_DATE
ON VEHICLES
AFTER UPDATE
AS
BEGIN
	UPDATE VEHICLES SET UPDATE_DATE=GETDATE()WHERE ACCIDENT_INDEX=(SELECT ACCIDENT_INDEX FROM inserted)
END

GO

CREATE TRIGGER CASUALTIES_CREATE_DATE
ON CASUALTIES
AFTER INSERT
AS
BEGIN
	UPDATE CASUALTIES SET CREATED_DATE=GETDATE() WHERE ACCIDENT_INDEX=(SELECT ACCIDENT_INDEX FROM inserted)
END

GO
CREATE TRIGGER CASUALTIES_UPDATE_DATE
ON CASUALTIES
AFTER UPDATE
AS
BEGIN
	UPDATE CASUALTIES SET UPDATE_DATE=GETDATE()WHERE ACCIDENT_INDEX=(SELECT ACCIDENT_INDEX FROM inserted)
END


GO
CREATE TRIGGER POSTCODE_CREATE_DATE
ON POSTCODE
AFTER INSERT
AS
BEGIN
	UPDATE POSTCODE SET CREATED_DATE=GETDATE() WHERE POSTCODE=(SELECT POSTCODE FROM inserted)
END

GO
CREATE TRIGGER POSTCODE_UPDATE_DATE
ON POSTCODE
AFTER UPDATE
AS
BEGIN
	UPDATE POSTCODE SET UPDATE_DATE=GETDATE()WHERE POSTCODE=(SELECT POSTCODE FROM inserted)
END


GO
CREATE TRIGGER LSOA_CREATE_DATE
ON LSOA_INFO
AFTER INSERT
AS
BEGIN
	UPDATE LSOA_INFO SET CREATED_DATE=GETDATE() WHERE LSOA=(SELECT LSOA FROM inserted)
END

GO
CREATE TRIGGER LSOA_UPDATE_DATE
ON LSOA_INFO
AFTER UPDATE
AS
BEGIN
	UPDATE LSOA_INFO SET UPDATE_DATE=GETDATE()WHERE LSOA=(SELECT LSOA FROM inserted)
END
*/